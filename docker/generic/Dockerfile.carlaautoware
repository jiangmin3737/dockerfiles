ARG FROM_ARG
ARG CARLA_VERSION=0.9.8
ARG CARLA_BUILD=''
FROM carlasim/carla:$CARLA_VERSION$CARLA_BUILD as carla
ARG VULKAN_VERSION=v1.1.96

FROM ${FROM_ARG}

ARG UE4_GIT_BRANCH=4.22.3-release
ARG CREDENTIAL_ARG=""
ARG UE4_GIT_REPO="https://github.com/EpicGames/UnrealEngine.git"

#ENV UE4_ROOT=/home/$USERNAME/UnrealEngine
#ENV DEBIAN_FRONTEND noninteractive

SHELL ["/bin/bash", "-c"]

USER root
# install git-lfs
RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
RUN apt-get update && apt-get install -y --no-install-recommends git-lfs
RUN git lfs install

# install pip & install simple-pid
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y python-pip ros-melodic-ackermann-msgs ros-melodic-derived-object-msgs
RUN pip install simple-pid pygame networkx==2.2
#RUN rosdep update
#RUN rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO

# ue4 carla dependencies install
RUN \
	apt-get update && \
	apt-get install -y --no-install-recommends apt-utils wget software-properties-common && \
	add-apt-repository ppa:ubuntu-toolchain-r/test && \
	wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add - && \
	apt-add-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main" && \
	apt-get update

RUN \
	apt-get install -y --no-install-recommends xdg-utils --fix-missing build-essential nano clang-7 lld-7 g++-7 cmake ninja-build libvulkan1 python-dev python3-dev python3-pip \
	libpng-dev libtiff5-dev libjpeg-dev tzdata sed curl unzip autoconf libtool rsync libxml2-dev && \
	pip2 install --user setuptools && \
	pip3 install --user setuptools && \
	apt-get update

# Download and compile vulkan components
RUN \
    cd /opt && git clone https://github.com/KhronosGroup/Vulkan-ValidationLayers.git && mv /opt/Vulkan-ValidationLayers /opt/vulkan && \
    cd /opt/vulkan && git checkout "${VULKAN_VERSION}" && \
    mkdir build && cd build && ../scripts/update_deps.py && \
    cmake -C helper.cmake -DCMAKE_BUILD_TYPE=Release .. && \
    cmake --build . && make install && ldconfig && \
    mkdir -p /usr/local/lib && cp -a Vulkan-Loader/build/install/lib/* /usr/local/lib && \
    mkdir -p /usr/local/include/vulkan && cp -r Vulkan-Headers/build/install/include/vulkan/* /usr/local/include/vulkan && \
    mkdir -p /usr/local/share/vulkan/registry && \
    cp -r Vulkan-Headers/build/install/share/vulkan/registry/* /usr/local/share/vulkan/registry && \
    rm -rf /opt/vulkan

# Enable Vulkan support
RUN apt-get update && apt-get install -y --no-install-recommends libvulkan1 && \
	rm -rf /var/lib/apt/lists/* && \
	VULKAN_API_VERSION=`dpkg -s libvulkan1 | grep -oP 'Version: [0-9|\.]+' | grep -oP '[0-9|\.]+'` && \
	mkdir -p /etc/vulkan/icd.d/ && \
	echo \
	"{\
		\"file_format_version\" : \"1.0.0\",\
		\"ICD\": {\
			\"library_path\": \"libGLX_nvidia.so.0\",\
			\"api_version\" : \"${VULKAN_API_VERSION}\"\
		}\
	}" > /etc/vulkan/icd.d/nvidia_icd.json

USER autoware
# download carla-autoware
RUN cd /home/$USERNAME &&git clone https://github.com/carla-simulator/carla-autoware.git
RUN cd /home/$USERNAME/carla-autoware/ && git reset --hard eec9d6a211f3e2cdc8790705186816427ba42669 && git submodule update --init
RUN cd /home/$USERNAME/carla-autoware/catkin_ws/ && source /home/autoware/Autoware/install/setup.bash && catkin_init_workspace src/
RUN cd /home/$USERNAME/carla-autoware/catkin_ws && source /etc/profile.d/ros.sh && source /home/autoware/Autoware/install/setup.bash && catkin_make

USER autoware
# copy API carla-python 
# RUN mkdir -p /home/$USERNAME/carla-python
COPY --from=carla /home/carla/PythonAPI/ /home/$USERNAME/carla-python

# VenetDCP setup
ADD --chown=autoware ./VenetDCP.tar.xz /home/$USERNAME/Autoware/src/vendor/
ADD --chown=autoware ./.autoware.tar.xz /home/$USERNAME/

#patch the diff
COPY ./carla_autware.patch /home/$USERNAME/carla-autoware/
RUN cd /home/$USERNAME/carla-autoware && patch -p1  < carla_autware.patch
RUN source /home/$USERNAME/carla-autoware/catkin_ws/devel/setup.bash && cd /home/$USERNAME/carla-autoware/catkin_ws && catkin_make

# export parameter
RUN echo "source /etc/profile.d/ros.sh" >> /home/$USERNAME/.bashrc

# build Autoware
RUN cd /home/$USERNAME/Autoware/ && source /home/autoware/Autoware/install/setup.bash && AUTOWARE_COMPILE_WITH_CUDA=1 colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release

USER root

RUN \
	update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-7/bin/clang++ 180 && \
	update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-7/bin/clang 180

USER autoware
# download ue4 source code
RUN git config --global credential.helper store && echo $CREDENTIAL_ARG > /home/$USERNAME/.git-credentials
RUN cat /home/$USERNAME/.git-credentials
RUN cd /home/$USERNAME && git clone $UE4_GIT_REPO
RUN cd /home/$USERNAME/UnrealEngine && pwd && git checkout $UE4_GIT_BRANCH
RUN cd /home/$USERNAME/UnrealEngine && ./Setup.sh && ./GenerateProjectFiles.sh && make
#RUN cd /home/$USERNAME/UnrealEngine && make
#RUN echo "export UE4_ROOT=/home/$USERNAME/UnrealEngine" >> /home/$USERNAME/.bashrc

# download carla source code
RUN cd /home/$USERNAME/ && git clone https://github.com/carla-simulator/carla
RUN cd /home/$USERNAME/carla/ && pwd && git checkout $CARLA_VERSION && export UE4_ROOT=/home/$USERNAME/UnrealEngine && ./Update.sh


#replace Autoware entrypoint
WORKDIR /home/$USERNAME/
ENTRYPOINT []
CMD ["/bin/bash"]
